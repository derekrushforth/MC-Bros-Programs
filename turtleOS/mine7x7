--[[ 
mine7x7
     
This program will mine a grid with
a 7x7 spacing.

Place a Torches in slot 16.

Place fuel in slot 1.

Will collect everything mined
in other slots.
]]




function kamfuel(slot,blocks)
  local fueling = turtle.getFuelLevel()

  if fueling ~= "unlimited" then
    if fueling < blocks then
      turtle.select(1)
      turtle.refuel()
      turtle.select(slot)
    end
  end
end

function fward(steps)
  for i=1,steps do
    turtle.forward()
  end
end

function kamdig(slot)
--  turtle.select(2)
  if turtle.compare() then
    turtle.drop()
  end
  --[[ optionally exlude something else
  turtle.select(3)
  if turtle.compare() then
    turtle.drop()
  end
  ]]
  turtle.dig()
--  turtle.select(slot)
end

function kamdigDown(slot)
--  turtle.select(2)
  if turtle.compareDown() then
    turtle.drop()
  end
  --[[ optionally exlude something else
  turtle.select(3)
  if turtle.compare() then
    turtle.drop()
  end
  ]]
  turtle.digDown()
--  turtle.select(slot)
end

function mine21(size)
  for i=1,size do
    kamfuel(16,7)
    
    turtle.select(2)
    if turtle.getItemCount(16) < 2 then
      -- hook for future expansion
    end
    for i=1,7 do
      if turtle.detect() then
        --kamdig(16)
        turtle.dig()
      end

      while turtle.forward() ~= true do
        turtle.dig()
      end

      if turtle.detectDown() then
        if i == 7 then
          turtle.select(16)
          if turtle.compareDown() ~= true then
            turtle.select(2)
            --kamdigDown(16)
            turtle.digDown()
          end
        else
          turtle.select(2)
          --kamdigDown(16)
          turtle.digDown()
        end
      end
    end

    turtle.select(16)
    if (turtle.compareDown() ~= true) then
      turtle.placeDown()
    end
  end
end

function rect(rows,cols)
  for i=1,2 do
    mine21(rows)
    turtle.turnRight()
    mine21(cols)
    turtle.turnRight()
  end
end

function makerows(rows,cols)
  if rows-1 > 0 then
    for i=1,(rows-1) do
      local tmp = i%2

      kamfuel(16,7)
      mine21(7)

      if tmp == 0 then
        turtle.turnLeft()
      else 
        turtle.turnRight()
      end

      mine21(cols)

      if tmp == 0 then
        turtle.turnRight()
      else
        turtle.turnLeft()
      end
    end
    mine21(7)
    if rows%2 == 0 then
      turtle.turnLeft()
    else
      turtle.turnRight()
    end
  end
end

function makecolumns(rows,cols)
  if cols-1 > 0 then
    for i=1,(cols-1) do
      local tmp = i%2

      kamfuel(16,7)
      mine21(7)

      if tmp == 1 then
        turtle.turnLeft()
      else 
        turtle.turnRight()
      end

      mine21(rows)

      if tmp == 1 then
        turtle.turnRight()
      else
        turtle.turnLeft()
      end
    end
    mine21(7)
    if cols%2 == 1 then
      turtle.turnLeft()
    else
      turtle.turnRight()
    end
  end
end

local arg = {...}
if arg ~= nil then
  local tmp = tonumber(arg[1])
  
  if tmp ~= nil then
    rows = tmp 
  else
   rows = 1
  end

  local tmp = tonumber(arg[2])

  if tmp ~= nil then
    cols = tmp
  else
    cols = 0
  end
  if rows ~= nill then
    turtle.select(16)
    rect(rows,cols)
    makerows(rows,cols)
    makecolumns(rows,cols)
  end
end
